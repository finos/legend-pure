import meta::external::query::graphQL::introspection::tests::*;

Class meta::external::query::graphQL::introspection::tests::Firm
{
  legalName : String[1];
  employees : meta::external::query::graphQL::introspection::tests::Person[*];
}

Class meta::external::query::graphQL::introspection::tests::Person
{
  firstName : String[1];
  lastName : String[1];
}

Class meta::external::query::graphQL::introspection::tests::Domain extends meta::external::query::graphQL::introspection::BaseGraphQLType
{
  firmByLegalName(legalName : String[1]) 
  {
    Firm.all()->filter(f|$f.legalName == $legalName)->first()
  }: Firm[0..1];
}

function <<test.Test>> meta::external::query::graphQL::introspection::tests::testSimpleIntrospection():Boolean[1]
{
  let query = meta::external::query::graphQL::transformation::queryToPure::tests::buildIntrospectionQuery();
  let strSresult = meta::external::query::graphQL::introspection::graphQLIntrospectionQuery(Firm, $query);
  assertJsonStringsEqual('{"__schema":{"directives":[],"queryType":{"name":"Firm"},"types":[{"fields":[{"type":{"ofType":null,"kind":"SCALAR","name":"String"},"isDeprecated":false,"deprecationReason":null,"name":"legalName","args":[]},{"type":{"ofType":null,"kind":"OBJECT","name":"Person"},"isDeprecated":false,"deprecationReason":null,"name":"employees","args":[]}],"possibleTypes":[],"kind":"OBJECT","inputFields":[],"enumValues":[],"interfaces":[],"name":"Firm"},{"fields":[{"type":{"ofType":null,"kind":"SCALAR","name":"String"},"isDeprecated":false,"deprecationReason":null,"name":"firstName","args":[]},{"type":{"ofType":null,"kind":"SCALAR","name":"String"},"isDeprecated":false,"deprecationReason":null,"name":"lastName","args":[]}],"possibleTypes":[],"kind":"OBJECT","inputFields":[],"enumValues":[],"interfaces":[],"name":"Person"},{"fields":[],"possibleTypes":[],"kind":"SCALAR","inputFields":[],"enumValues":[],"interfaces":[],"name":"String"}],"mutationType":null}}', $strSresult);
}

function <<test.Test>> meta::external::query::graphQL::introspection::tests::testIntrospectionWithQualified():Boolean[1]
{
  let query = meta::external::query::graphQL::transformation::queryToPure::tests::buildIntrospectionQuery();
  let strSresult = meta::external::query::graphQL::introspection::graphQLIntrospectionQuery(meta::external::query::graphQL::introspection::tests::Domain, $query);
  assertJsonStringsEqual('{"__schema":{"directives":[],"queryType":{"name":"Domain"},"types":[{"fields":[{"type":{"ofType":null,"kind":"OBJECT","name":"Firm"},"isDeprecated":false,"deprecationReason":null,"name":"firmByLegalName","args":[{"name":"legalName","defaultValue":null,"type":{"ofType":null,"kind":"SCALAR","name":"String"}}]}],"possibleTypes":[],"kind":"OBJECT","inputFields":[],"enumValues":[],"interfaces":[],"name":"Domain"},{"fields":[{"type":{"ofType":null,"kind":"SCALAR","name":"String"},"isDeprecated":false,"deprecationReason":null,"name":"legalName","args":[]},{"type":{"ofType":null,"kind":"OBJECT","name":"Person"},"isDeprecated":false,"deprecationReason":null,"name":"employees","args":[]}],"possibleTypes":[],"kind":"OBJECT","inputFields":[],"enumValues":[],"interfaces":[],"name":"Firm"},{"fields":[{"type":{"ofType":null,"kind":"SCALAR","name":"String"},"isDeprecated":false,"deprecationReason":null,"name":"firstName","args":[]},{"type":{"ofType":null,"kind":"SCALAR","name":"String"},"isDeprecated":false,"deprecationReason":null,"name":"lastName","args":[]}],"possibleTypes":[],"kind":"OBJECT","inputFields":[],"enumValues":[],"interfaces":[],"name":"Person"},{"fields":[],"possibleTypes":[],"kind":"SCALAR","inputFields":[],"enumValues":[],"interfaces":[],"name":"String"}],"mutationType":null}}', $strSresult);
  
}