// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::protobuf::metamodel::*;

function meta::external::protobuf::serialization::toString(p:ProtoBufType[1]):String[1]
{
   $p->match(
      [
         message:Message[1]|'message ' + $message.name + ' {\n' + $message.fields->map(f | $f->meta::external::protobuf::serialization::toString())->joinStrings(';\n') + ';\n}',
         enum:meta::external::protobuf::metamodel::Enumeration[1]| 'enum '+$enum.name+' {\n'+$enum.values->map(v|'   '+$v.constant+' = '+$enum.values->indexOf($v)->toString())->joinStrings(';\n')+';\n}'
      ]
   )
   
}

function meta::external::protobuf::serialization::toString(field:Field[1]):String[1]
{
   ' ' + if($field.repeated, | 'repeated ', | '') + $field.type->match(
                                                                  [
                                                                     t:MessagePtr[1]|$t.name,
                                                                     t:EnumPtr[1]|$t.name,
                                                                     t:ProtoBufType[1]|$t->genericType().rawType.name->toOne()->toLower()
                                                                  ])+ ' ' + $field.name + ' = ' + $field.binaryFieldNumber->toString()
}