// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//------------------
// assertNotContains
//------------------

function meta::pure::functions::asserts::assertNotContains(collection:Any[*], value:Any[1]):Boolean[1]
{
    assertNotContains($collection, $value, | format('%s should not contain %r', [$collection->map(v | $v->toRepresentation())->joinStrings('[', ', ', ']'), $value]));
}

function meta::pure::functions::asserts::assertNotContains(collection:Any[*], value:Any[1], message:String[1]):Boolean[1]
{
    assert(!$collection->contains($value), $message);
}

function meta::pure::functions::asserts::assertNotContains(collection:Any[*], value:Any[1], formatString:String[1], formatArgs:Any[*]):Boolean[1]
{
    assert(!$collection->contains($value), $formatString, $formatArgs);
}

function meta::pure::functions::asserts::assertNotContains(collection:Any[*], value:Any[1], message:Function<{->String[1]}>[1]):Boolean[1]
{
    assert(!$collection->contains($value), $message);
}

function <<test.Test>> meta::pure::functions::asserts::tests::testSuccessAssertNotContains():Any[*]
{
    assertNotContains([1, 2, 5, 2, 'a', true, %2014-02-01, 'c'], false);
    assertNotContains([1, 2, 5, 2, 'a', true, %2014-02-01, 'c'], 'b');
}