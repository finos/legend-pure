// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

Enum meta::xsd::metamodel::XsdContentProcessing
{
  LAX,
  SKIP,
  STRICT
}

Enum meta::xsd::metamodel::XsdDerivationType
{
  EXTENSION,
  RESTRICTION,
  SUBSTITUTION,
  LIST,
  UNION
}

Enum meta::xsd::metamodel::XsdForm
{
  QUALIFIED,
  UNQUALIFIED
}

Enum meta::xsd::metamodel::XsdUse
{
  OPTIONAL,
  PROHIBITED,
  REQUIRED
}

Class meta::xml::metamodel::QName
{
  <<equality.Key>> namespace: String[1];
  <<equality.Key>> localPart: String[1];
  prefix : String[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdAnnotated extends meta::xsd::metamodel::XsdObject
{
  annotation : meta::xsd::metamodel::XsdAnnotation[0..1];
}

Class meta::xsd::metamodel::XsdAnnotation extends meta::xsd::metamodel::XsdObject
{
  items : meta::xsd::metamodel::XsdAnnotationItem[*];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdAnnotationItem extends meta::xsd::metamodel::XsdObject
{
}

Class meta::xsd::metamodel::XsdAll extends meta::xsd::metamodel::XsdGroupParticle
{
}

Class meta::xsd::metamodel::XsdAny extends meta::xsd::metamodel::XsdParticle
{
  namespace       : String[*];
  processContents : meta::xsd::metamodel::XsdContentProcessing[0..1];
}

Class meta::xsd::metamodel::XsdAnyAttribute extends meta::xsd::metamodel::XsdAnnotated
{
  namespace       : String[*];
  processContents : meta::xsd::metamodel::XsdContentProcessing[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdAnyType extends meta::xsd::metamodel::XsdAnnotated
{
}

Class {doc.todo = 'Any markup'} meta::xsd::metamodel::XsdAppInfo extends meta::xsd::metamodel::XsdAnnotationItem
{
}

Class meta::xsd::metamodel::XsdAttribute extends meta::xsd::metamodel::XsdAttributeItem, meta::xsd::metamodel::XsdNamed
[
  defaultFixedExclusive: $this.defaultValue->isEmpty() || $this.fixedValue->isEmpty()
]
{
  defaultValue : String[0..1];
  fixedValue   : String[0..1];
  form         : meta::xsd::metamodel::XsdForm[0..1];
  typeName     : meta::xml::metamodel::QName[0..1];
  type         : meta::xsd::metamodel::XsdSimpleType[0..1];
  use          : meta::xsd::metamodel::XsdUse[0..1];
}

Class meta::xsd::metamodel::XsdAttributeGroup extends meta::xsd::metamodel::XsdAttributeItem, meta::xsd::metamodel::XsdNamed
{
  items: meta::xsd::metamodel::XsdAttributeItem[*];
  anyAttribute: meta::xsd::metamodel::XsdAnyAttribute[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdAttributeItem extends meta::xsd::metamodel::XsdAnnotated
{
}

Class meta::xsd::metamodel::XsdChoice extends meta::xsd::metamodel::XsdGroupParticle
{
}

Class meta::xsd::metamodel::XsdComplexContent extends meta::xsd::metamodel::XsdContentModel
{
  mixed : Boolean[1];
}

Class meta::xsd::metamodel::XsdComplexType extends meta::xsd::metamodel::XsdAnyType, meta::xsd::metamodel::XsdNamed
{
  particle       : meta::xsd::metamodel::XsdParticle[0..1];
  contentModel   : meta::xsd::metamodel::XsdContentModel[0..1];
  attributeItems : meta::xsd::metamodel::XsdAttributeItem[*];
  anyAttribute   : meta::xsd::metamodel::XsdAnyAttribute[0..1];
  abstract       : Boolean[0..1];
  mixed          : Boolean[0..1];
  block          : meta::xsd::metamodel::XsdDerivationType[0..2];
  final          : meta::xsd::metamodel::XsdDerivationType[0..2];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdContentDerivation
{
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdContentModel extends meta::xsd::metamodel::XsdAnnotated
{
  derivation : meta::xsd::metamodel::XsdContentDerivation[1];
}

Class {doc.todo = 'Any markup'} meta::xsd::metamodel::XsdDocumentation extends meta::xsd::metamodel::XsdAnnotationItem
{
  language : String[0..1];
  value    : String[1];
}

Class meta::xsd::metamodel::XsdElement extends meta::xsd::metamodel::XsdParticle, meta::xsd::metamodel::XsdNamed
{
  defaultValue      : String[0..1];
  fixedValue        : String[0..1];
  form              : meta::xsd::metamodel::XsdForm[0..1];
  block             : meta::xsd::metamodel::XsdDerivationType[0..3];
  final             : meta::xsd::metamodel::XsdDerivationType[0..2];
  abstract          : Boolean[0..1];
  nilable           : Boolean[0..1];
  typeName          : meta::xml::metamodel::QName[0..1];
  type              : meta::xsd::metamodel::XsdAnyType[0..1];
  substitutionGroup : meta::xml::metamodel::QName[0..1];
}

Class meta::xsd::metamodel::XsdEnumeration extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdExtension extends meta::xsd::metamodel::XsdAnnotated, meta::xsd::metamodel::XsdContentDerivation
{
  baseTypeName   : meta::xml::metamodel::QName[0..1];
  attributeItems : meta::xsd::metamodel::XsdAttributeItem[*];
  anyAttribute   : meta::xsd::metamodel::XsdAnyAttribute[0..1];
  particle       : meta::xsd::metamodel::XsdParticle[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdExternalSchema extends meta::xsd::metamodel::XsdAnnotated
{
  schemaLocation : String[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdFacet extends meta::xsd::metamodel::XsdAnnotated
{
  value : String[1];
  fixed : Boolean[0..1];
}

Class meta::xsd::metamodel::XsdFractionDigits extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdGroup extends meta::xsd::metamodel::XsdParticle, meta::xsd::metamodel::XsdNamed
{
  particle : meta::xsd::metamodel::XsdGroupParticle[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdGroupParticle extends meta::xsd::metamodel::XsdParticle
{
  items : meta::xsd::metamodel::XsdParticle[*];
}

Class meta::xsd::metamodel::XsdImport extends meta::xsd::metamodel::XsdExternalSchema
{
  namespace : String[1];
}

Class meta::xsd::metamodel::XsdInclude extends meta::xsd::metamodel::XsdExternalSchema
{
}

Class meta::xsd::metamodel::XsdLength extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdList extends meta::xsd::metamodel::XsdAnnotated, meta::xsd::metamodel::XsdSimpleTypeDerivation
{
  itemTypeName : meta::xml::metamodel::QName[0..1];
  itemType     : meta::xsd::metamodel::XsdSimpleType[0..1];
}

Class meta::xsd::metamodel::XsdMaxExclusive extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdMaxInclusive extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdMaxLength extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdMinExclusive extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdMinInclusive extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdMinLength extends meta::xsd::metamodel::XsdFacet
{
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdNamed
[
  nameAndRefExclusive: $this.name->isEmpty() || $this.ref->isEmpty()
]
{
  name : meta::xml::metamodel::QName[0..1];
  ref  : meta::xml::metamodel::QName[0..1];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdObject
{
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdParticle extends meta::xsd::metamodel::XsdAnnotated
{
  minOccurs : Integer[1];
  maxOccurs : Integer[0..1];
}

Class meta::xsd::metamodel::XsdPattern extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdRedefine extends meta::xsd::metamodel::XsdExternalSchema
{
  items : meta::xsd::metamodel::XsdObject[*];
}

Class meta::xsd::metamodel::XsdRestriction extends meta::xsd::metamodel::XsdAnnotated, meta::xsd::metamodel::XsdSimpleTypeDerivation, meta::xsd::metamodel::XsdContentDerivation
{
  baseTypeName   : meta::xml::metamodel::QName[0..1];
  baseType       : meta::xsd::metamodel::XsdAnyType[0..1];
  facets         : meta::xsd::metamodel::XsdFacet[*];
  attributeItems : meta::xsd::metamodel::XsdAttributeItem[*];
  anyAttribute   : meta::xsd::metamodel::XsdAnyAttribute[0..1];
  particle       : meta::xsd::metamodel::XsdParticle[0..1];
}

Class meta::xsd::metamodel::XsdSchema extends meta::xsd::metamodel::XsdAnnotated, meta::external::shared::metamodel::SchemaDetail
{
  targetNamespace      : String[0..1];
  items                : meta::xsd::metamodel::XsdObject[*];
  externals            : meta::xsd::metamodel::XsdExternalSchema[*];
  attributeFormDefault : meta::xsd::metamodel::XsdForm[0..1];
  elementFormDefault   : meta::xsd::metamodel::XsdForm[0..1];
  blockDefault         : meta::xsd::metamodel::XsdDerivationType[0..3];
  finalDefault         : meta::xsd::metamodel::XsdDerivationType[0..2];
  version              : String[0..1];
}

Class meta::xsd::metamodel::XsdSequence extends meta::xsd::metamodel::XsdGroupParticle
{
}

Class meta::xsd::metamodel::XsdSimpleContent extends meta::xsd::metamodel::XsdContentModel
{
}

Class meta::xsd::metamodel::XsdSimpleType extends meta::xsd::metamodel::XsdAnyType, meta::xsd::metamodel::XsdNamed
{
  derivation : meta::xsd::metamodel::XsdSimpleTypeDerivation[0..1];
  final      : meta::xsd::metamodel::XsdDerivationType[0..3];
}

Class <<typemodifiers.abstract>> meta::xsd::metamodel::XsdSimpleTypeDerivation
{
}

Class meta::xsd::metamodel::XsdTotalDigits extends meta::xsd::metamodel::XsdFacet
{
}

Class meta::xsd::metamodel::XsdUnion extends meta::xsd::metamodel::XsdAnnotated, meta::xsd::metamodel::XsdSimpleTypeDerivation
{
  memberTypeNames : meta::xml::metamodel::QName[*];
  memberTypes     : meta::xsd::metamodel::XsdSimpleType[*];
}

Class meta::xsd::metamodel::XsdWhiteSpace extends meta::xsd::metamodel::XsdFacet
{
}
