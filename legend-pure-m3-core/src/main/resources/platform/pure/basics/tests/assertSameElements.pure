// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::functions::asserts::*;

function meta::pure::functions::asserts::assertSameElements(expected:Any[*], actual:Any[*]):Boolean[1]
{
    assertSameElements($expected, $actual, | $expected->sort()->map(e | $e->toRepresentation())->joinStrings('\nexpected: [', ', ', ']') + $actual->sort()->map(a | $a->toRepresentation())->joinStrings('\nactual:   [', ', ', ']'));
}

function meta::pure::functions::asserts::assertSameElements(expected:Any[*], actual:Any[*], message:String[1]):Boolean[1]
{
    assertEquals($expected->sort(), $actual->sort(), $message);
}

function meta::pure::functions::asserts::assertSameElements(expected:Any[*], actual:Any[*], formatString:String[1], formatArgs:Any[*]):Boolean[1]
{
    assertEquals($expected->sort(), $actual->sort(), $formatString, $formatArgs);
}

function meta::pure::functions::asserts::assertSameElements(expected:Any[*], actual:Any[*], message:Function<{->String[1]}>[1]):Boolean[1]
{
    assertEquals($expected->sort(), $actual->sort(), $message);
}


function <<test.Test>> meta::pure::functions::asserts::tests::testSuccessAssertSameElements():Any[*]
{
    assertSameElements([1, 2], [1, 2]);
    assertSameElements([1, 2], [2, 1]);
    assertSameElements(['aaa'], ['aaa']);
    assertSameElements(['aaa', 'bb'], ['aaa', 'bb']);
    assertSameElements(['aaa', 2], ['aaa', 2]);
    assertSameElements(['aaa', 2], [2, 'aaa']);
}
