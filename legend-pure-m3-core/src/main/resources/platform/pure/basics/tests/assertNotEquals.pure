// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

function meta::pure::functions::asserts::assertNotEquals(notExpected:Any[*], actual:Any[*]):Boolean[1]
{
    if(eq($notExpected->size(), 1) && eq($actual->size(), 1),
       | assertNotEquals($notExpected, $actual, '%r should not equal %r', [$notExpected->toOne(), $actual->toOne()]),
       | assertNotEquals($notExpected, $actual, | $notExpected->map(e | $e->toRepresentation())->joinStrings('[', ', ', ']') + ' should not equal ' + $actual->map(a | $a->toRepresentation())->joinStrings('[', ', ', ']')))
}

function meta::pure::functions::asserts::assertNotEquals(notExpected:Any[*], actual:Any[*], message:String[1]):Boolean[1]
{
    assert(!equal($notExpected, $actual), $message);
}

function meta::pure::functions::asserts::assertNotEquals(notExpected:Any[*], actual:Any[*], formatString:String[1], formatArgs:Any[*]):Boolean[1]
{
    assert(!equal($notExpected, $actual), $formatString, $formatArgs);
}

function meta::pure::functions::asserts::assertNotEquals(notExpected:Any[*], actual:Any[*], message:Function<{->String[1]}>[1]):Boolean[1]
{
    assert(!equal($notExpected, $actual), $message);
}





function <<test.Test>> meta::pure::functions::asserts::tests::testSuccessAssertNotEquals():Any[*]
{
    assertNotEquals(1, 2);
    assertNotEquals('aaa', 'bbb');
}

function <<test.Test>> meta::pure::functions::asserts::tests::testSuccessAssertNotEqualsCollection():Any[*]
{
    assertNotEquals([1, 3, 2], [2, 4, 1, 5]);
    assertNotEquals([1, 2], [2, 1]);
    assertNotEquals(['aaa', 2], [2, 'aaa']);
}