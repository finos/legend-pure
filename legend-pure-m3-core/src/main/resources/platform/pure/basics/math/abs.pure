// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

native function meta::pure::functions::math::abs(int:Integer[1]):Integer[1];

native function meta::pure::functions::math::abs(float:Float[1]):Float[1];

native function meta::pure::functions::math::abs(number:Number[1]):Number[1];

native function meta::pure::functions::math::abs(decimal:Decimal[1]):Decimal[1];


function <<test.Test>> meta::pure::functions::math::tests::abs::testIntAbs():Boolean[1]
{
    assertEq(2, abs(-2));
}

function <<test.Test>> meta::pure::functions::math::tests::abs::testBigIntAbs():Boolean[1]
{
    assertEq(123456789123456789, abs(-123456789123456789));
}

function <<test.Test>> meta::pure::functions::math::tests::abs::testFloatAbs():Boolean[1]
{
    assertEq(2.222, abs(-2.222));
}

function <<test.Test>> meta::pure::functions::math::tests::abs::testBigFloatAbs():Boolean[1]
{
    assertEq(123456789123456789.99, abs(-123456789123456789.99));
}

function <<test.Test>> meta::pure::functions::math::tests::abs::testDecimalAbs():Boolean[1]
{
   assertEq(3.0d, abs(-3.0d));
   assertEq(3.0d, abs(3.0d));
}