// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::metamodel::relation::*;

Class meta::pure::metamodel::relation::Relation<T> // Where T is of type RelationType
{
}

Class meta::pure::metamodel::relation::RelationType<Z> extends Type
{
  referenceUsages : meta::pure::metamodel::ReferenceUsage[*];
  columns : Column<Z, Any|*>[*];
}

Class meta::pure::metamodel::relation::Column<U,V|m> extends Function<{U[1]->V[m]}>
{
}

Class meta::pure::metamodel::relation::ConcreteColumn<U,V|m> extends meta::pure::metamodel::relation::Column<U,V|m>
{
}

Class meta::pure::metamodel::relation::AggColumn<U,T,V> extends meta::pure::metamodel::relation::Column<U,V|0..1>
{
  mapFn : FunctionDefinition<{U[1]->T[*]}>[1];
  aggregateFn : FunctionDefinition<{T[*]->V[0..1]}>[1];
}

Class meta::pure::metamodel::relation::FuncColumn<U,V|m> extends meta::pure::metamodel::relation::Column<U,V|m>
{
    func : FunctionDefinition<{U[1]->V[m]}>[1];
}