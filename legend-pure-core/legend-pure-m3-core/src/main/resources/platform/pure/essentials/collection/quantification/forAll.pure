// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

native function <<PCT.function>> meta::pure::functions::collection::forAll<T>(value:T[*], func:Function<{T[1]->Boolean[1]}>[1]):Boolean[1];

function <<PCT.test>> meta::pure::functions::collection::tests::forall::testforAllOnEmptySet<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assert($f->eval(|[]->forAll(e | $e == 0)));
}

function <<PCT.test>> meta::pure::functions::collection::tests::forall::testforAllOnNonEmptySetIsTrue<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assert($f->eval(|[1, 2, 3]->forAll(e | $e > 0)));
}

function <<PCT.test>> meta::pure::functions::collection::tests::forall::testforAllOnNonEmptySetIsFalse<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
  assertFalse($f->eval(|[1, 2, 3]->forAll(e | $e > 1)));
}