// Copyright 2024 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;
import meta::pure::functions::collection::tests::removeDuplicates::*;

function <<PCT.function>> meta::pure::functions::collection::removeDuplicatesBy<T>(col:T[*], key:Function<{T[1]->Any[1]}>[1]):T[*]
{
    $col->removeDuplicates($key, [])
}

function <<PCT.test>> meta::pure::functions::collection::tests::removeDuplicatesBy::testRemoveDuplicatesByPrimitive<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assertEquals([1, 2, '3'], $f->eval(|[1, 2, '1', '3', 1, 3, '3', 2]->removeDuplicatesBy({x | $x->toString()})));
    assertEquals(['1', 2, '3'], $f->eval(|['1', 2, '1', '3', 1, 3, '3', 2]->removeDuplicatesBy({x | $x->toString()})));
    assertEquals(['hello', 'world'], $f->eval(|['hello', 'helloWorld', 'world']->removeDuplicatesBy(x:String[1]|$x->substring(0,1))));
}