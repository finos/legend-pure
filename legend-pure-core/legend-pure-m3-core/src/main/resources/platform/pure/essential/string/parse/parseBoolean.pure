// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

native function <<PCT.function>> meta::pure::functions::string::parseBoolean(string:String[1]):Boolean[1];

function <<PCT.test>> meta::pure::functions::string::tests::parseBoolean::testParseTrue<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assert($f->eval(|parseBoolean('true')));
    assert($f->eval(|parseBoolean('True')));
    assert($f->eval(|parseBoolean('tRue')));
    assert($f->eval(|parseBoolean('trUe')));
    assert($f->eval(|parseBoolean('truE')));
    assert($f->eval(|parseBoolean('TRUE')));
}

function <<PCT.test>> meta::pure::functions::string::tests::parseBoolean::testParseFalse<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assertFalse($f->eval(|parseBoolean('false')));
    assertFalse($f->eval(|parseBoolean('False')));
    assertFalse($f->eval(|parseBoolean('fAlse')));
    assertFalse($f->eval(|parseBoolean('faLse')));
    assertFalse($f->eval(|parseBoolean('falSe')));
    assertFalse($f->eval(|parseBoolean('falsE')));
    assertFalse($f->eval(|parseBoolean('FALSE')));
}
