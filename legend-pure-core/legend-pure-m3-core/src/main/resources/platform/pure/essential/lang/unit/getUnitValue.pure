// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::functions::meta::tests::model::*;
import meta::pure::test::pct::*;

native function <<PCT.function, PCT.platformOnly>> meta::pure::functions::meta::getUnitValue(unit:Any[1]):Number[1];


function <<test.Test>> meta::pure::functions::meta::tests::getUnitValue::testGetUnitValue():Boolean[1]
{
    assertEquals(5, getUnitValue(5 RomanLength~Pes));
    assertEquals(10.5D, getUnitValue(10.5D RomanLength~Cubitum));
    assertEquals(-310.72D, getUnitValue(-310.72D RomanLength~Stadium));
    assertEquals(0, getUnitValue(0 RomanLength~Actus));
}

function <<test.Test>> meta::pure::functions::meta::tests::getUnitValue::testGetUnitValueEval():Boolean[1]
{
    assertEquals(5, getUnitValue_Any_1__Number_1_->eval(5 RomanLength~Pes));
    assertEquals(10.5D, getUnitValue_Any_1__Number_1_->eval(10.5D RomanLength~Cubitum));
    assertEquals(-310.72D, getUnitValue_Any_1__Number_1_->eval(-310.72D RomanLength~Stadium));
    assertEquals(0, getUnitValue_Any_1__Number_1_->eval(0 RomanLength~Actus));
}
