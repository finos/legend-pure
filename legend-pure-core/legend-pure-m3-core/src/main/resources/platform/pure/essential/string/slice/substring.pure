// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

native function
    <<PCT.function>>
    {
        doc.doc=''
    }
    meta::pure::functions::string::substring(str:String[1], start:Integer[1]):String[1];

native function <<PCT.function>> meta::pure::functions::string::substring(str:String[1], start:Integer[1], end:Integer[1]):String[1];

function <<PCT.test>> meta::pure::functions::string::tests::substring::testStart<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    let string = 'the quick brown fox jumps over the lazy dog';
    assertEquals('the quick brown fox jumps over the lazy dog', $f->eval(|substring($string, 0)));
    assertEquals('he quick brown fox jumps over the lazy dog', $f->eval(|substring($string, 1)));
    assertEquals('e quick brown fox jumps over the lazy dog', $f->eval(|substring($string, 2)));
    assertEquals(' quick brown fox jumps over the lazy dog', $f->eval(|substring($string, 3)));
    assertEquals('quick brown fox jumps over the lazy dog', $f->eval(|substring($string, 4)));
}

function <<PCT.test>> meta::pure::functions::string::tests::substring::testStartEnd<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    let string = 'the quick brown fox jumps over the lazy dog';
    assertEquals('the quick brown fox jumps over the lazy dog', $f->eval(|substring($string, 0, 43)));
    assertEquals('he quick brown fox jumps over the lazy do', $f->eval(|substring($string, 1, 42)));
    assertEquals('e quick brown fox jumps over the lazy d', $f->eval(|substring($string, 2, 41)));
    assertEquals(' quick brown fox jumps over the lazy ', $f->eval(|substring($string, 3, 40)));
    assertEquals('quick brown fox jumps over the lazy', $f->eval(|substring($string, 4, 39)));
}
