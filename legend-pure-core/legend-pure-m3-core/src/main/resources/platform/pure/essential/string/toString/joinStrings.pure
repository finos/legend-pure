// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::test::pct::*;

function
    <<PCT.function>>
    {
        doc.doc=''
    }
    meta::pure::functions::string::joinStrings(strings:String[*], separator:String[1]):String[1]
{
    $strings->joinStrings('', $separator, '')
}

function <<PCT.test>> meta::pure::functions::string::tests::joinStrings::testJoinStrings<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assertEq('a,b,c', $f->eval(|joinStrings(['a', 'b', 'c'], ',')));
    assertEq('[a,b,c]', $f->eval(|joinStrings(['a', 'b', 'c'], '[', ',', ']')));
}

function <<PCT.test>> meta::pure::functions::string::tests::joinStrings::testJoinStringsUsingGenericArrow<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assertEq('a,b,c', $f->eval(|['a', 'b', 'c']->joinStrings(',')));
    assertEq('[a,b,c]', $f->eval(|['a', 'b', 'c']->joinStrings('[', ',', ']')));
}

function <<PCT.test>> meta::pure::functions::string::tests::joinStrings::testJoinStringsSingleString<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assertEq('a', $f->eval(|joinStrings(['a'], ',')));
    assertEq('[a]', $f->eval(|joinStrings(['a'], '[', ',', ']')));
}

function <<PCT.test>> meta::pure::functions::string::tests::joinStrings::testJoinStringsNoStrings<Z|y>(f:Function<{Function<{->Z[y]}>[1]->Z[y]}>[1]):Boolean[1]
{
    assertEq('', $f->eval(|joinStrings(['a']->tail(), ',')));
    assertEq('[]', $f->eval(|joinStrings(['a']->tail(), '[', ',', ']')));
}