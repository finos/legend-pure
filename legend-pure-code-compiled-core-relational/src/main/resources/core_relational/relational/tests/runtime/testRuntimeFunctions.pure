// Copyright 2022 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::relational::functions::asserts::*;
import meta::relational::metamodel::execute::*;
import meta::pure::mapping::*;
import meta::relational::runtime::*;
import meta::relational::tests::*;
import meta::relational::tests::model::simple::*;

function <<test.BeforePackage>> meta::relational::tests::runtime::functions::setUp():Boolean[1]
{
   meta::relational::tests::projection::setUp();
}

function <<test.Test>> meta::relational::tests::runtime::functions::testCurrentUserId():Boolean[1]
{
   let query = {| let currentUser = meta::pure::runtime::currentUserId();
                  Firm.all()->filter(f|!$currentUser->isEmpty())->project([f|$f.legalName], ['legalName']);};

   let result = execute($query, meta::relational::tests::simpleRelationalMapping, testRuntime(), meta::pure::router::extension::defaultRelationalExtensions()).values.rows;
   assertSize($result, 4);
   assertEquals('Firm X', $result.legalName);
}