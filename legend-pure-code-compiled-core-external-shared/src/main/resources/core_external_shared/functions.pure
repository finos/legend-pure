// Copyright 2021 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::external::shared::*;
import meta::external::shared::functions::*;
import meta::pure::dataQuality::*;
import meta::pure::graphFetch::*;

Class meta::external::shared::ExternalFormatOption
{   
}

function meta::external::shared::functions::serialize<T>(collection: T[*], graphFetchTree: RootGraphFetchTree<T>[1], contentType:String[1]):String[1]
{
   fail('Implemented by execution plans');
   'Not impemented!';
}

function meta::external::shared::functions::serialize<T>(collection: T[*], graphFetchTree: RootGraphFetchTree<T>[1], contentType:String[1], options:ExternalFormatOption[*]):String[1]
{
   fail('Implemented by execution plans');
   'Not impemented!';
}

function meta::external::shared::functions::serialize<T>(collection: Checked<T>[*], graphFetchTree: RootGraphFetchTree<T>[1], contentType:String[1]):String[1]
{
   fail('Implemented by execution plans');
   'Not impemented!';
}

function meta::external::shared::functions::serialize<T>(collection: Checked<T>[*], graphFetchTree: RootGraphFetchTree<T>[1], contentType:String[1], options:ExternalFormatOption[*]):String[1]
{
   fail('Implemented by execution plans');
   'Not impemented!';
}

function meta::external::shared::functions::isSerialize(fe:FunctionExpression[1]):Boolean[1]
{
   $fe.func->in(serializeFunctions());
}

function meta::external::shared::functions::serializeFunctions():Function<Any>[*]
{
   [
      serialize_T_MANY__RootGraphFetchTree_1__String_1__String_1_,
      serialize_Checked_MANY__RootGraphFetchTree_1__String_1__String_1_,
      serialize_T_MANY__RootGraphFetchTree_1__String_1__ExternalFormatOption_MANY__String_1_,
      serialize_Checked_MANY__RootGraphFetchTree_1__String_1__ExternalFormatOption_MANY__String_1_
   ]
}
