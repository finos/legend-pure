// Copyright 2020 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Press F9 to execute the 'go' function...
// Press F10 to run the full test suite


import meta::rel::utils::*;
import meta::rel::model::*;
import meta::rel::model::render::*;
import meta::rel::query::*;

Class Person {
  firstName: String[1];
  lastName: String[1];
}

Class Firm {
  legalName: String[1];
}

Association Employment {
  firm: Firm[0..1];
  employees: Person[*];
}

function testProgram(): Program[1] {
  program('test')
    ->withRule(def(relation('x'), '3'))
    ->withRule(def(relation('y'), '4'));
}


function go():Any[*] {
  let emp1 = ^Person(firstName='Gerald', lastName='Berger');
  let emp2 = ^Person(firstName='John', lastName='Smith');

  let firm1 = ^Firm(legalName='Relational AI Inc.', employees=[$emp1, $emp2]);

  let query = [$emp1, $emp2, $emp2]
    ->intoQuery()
    ->where(p | $p.firstName == 'Gerald')
    ->select(p | $p.firstName);


  println($query.logic);
}
