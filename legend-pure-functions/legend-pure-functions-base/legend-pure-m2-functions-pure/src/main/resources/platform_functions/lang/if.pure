// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

function meta::pure::functions::lang::if<T|m>(condList:Pair<Function<{->Boolean[1]}>, Function<{->T[m]}>>[*], last:Function<{->T[m]}>[1]):T[m]
{
  let matchCond = $condList->find(f|$f.first->eval());
  if ($matchCond->isEmpty(),
    | $last->eval(),
    | $matchCond->toOne().second->eval()
  );
}

function <<test.Test>> meta::pure::functions::lang::tests::if::testMultiIf():Boolean[1]
{
    let val = 5;
    assertEquals(7, if(
                          [
                            pair(|$val==1,|2),
                            pair(|$val==2,|22)
                          ],
                          |4
                    )+3);

    assertEquals(5, if(
                        [
                          pair(|$val >1,|2),
                          pair(|$val==5,|4)
                        ],
                        |4
                  )+3);
}